<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer Workflow on Section</title>
    <link>https://www.section.io/docs/how-tos/developer-workflow/</link>
    <description>Recent content in Developer Workflow on Section</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2021 Section.</copyright><atom:link href="https://www.section.io/docs/how-tos/developer-workflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Connect Developer PoP to Aperture</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/connect-to-aperture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/connect-to-aperture/</guid>
      <description>DIf you don&amp;rsquo;t have an Aperture account and want to use the devpop to simply test reverse proxies, feel free to skip this section.*
 In the upper right hand corner of the devpop UI, there is a Connect to Aperture button. When clicking this it will redirect you to Aperture and prompt you to login and authorize the devpop. If you are successful then the Connect to Aperture button will be replaced with a blinking blue icon followed by your email address.</description>
    </item>
    
    <item>
      <title>Running Minikube with a Local Origin</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/dev-pop-with-local-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/dev-pop-with-local-server/</guid>
      <description>Although Minikube functions functions best when pointed at an origin server with a publicly available IP address, it is possible to connect DevPop to a local development server. The source of complexity here is dealing with the network bridge between the host machine and the Minikube virtual machine. The following is a set of directions for implementing this using virtual box and a local server running on port 80, but the necessary configuration may vary if you have an alternative setup.</description>
    </item>
    
    <item>
      <title>Troubleshoot Developer PoP Issues</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/troubleshoot-developerpop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/troubleshoot-developerpop/</guid>
      <description>The Developer PoP is a still in beta and will occasionally have hiccups. This section details some common issues and how to deal with them.
Network connectivity and computer sleep Often if you put your computer to sleep with Minikube running, it will break Minikube&amp;rsquo;s network adaptor, and you will get 503 errors without a clear cause when you resume operation. This will also prevent you from downloading proxy images as a part of a git push.</description>
    </item>
    
    <item>
      <title>Update Git for a different developer pop ip address</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/update-git-for-a-different-developer-pop-ip-address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/update-git-for-a-different-developer-pop-ip-address/</guid>
      <description>It is possible your Developer PoP IP address may change.
If you see a failure on git push with your Developer PoP, try these steps:
 Ensure Minikube is running: minikube status. Obtain the current IP address of Minikube: minikube ip. Substitute the IP address into the following command to update the git remote in your Developer PoP git remote set-url developer-pop http://192.168.99.100:30090/application-name.git.  </description>
    </item>
    
  </channel>
</rss>
