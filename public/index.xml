<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Section Docs on Section</title>
    <link>https://www.section.io/docs/</link>
    <description>Recent content in Section Docs on Section</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2021 Section.</copyright><atom:link href="https://www.section.io/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Acquire GoSquared Credentials</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/go-squared-credentials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/go-squared-credentials/</guid>
      <description>GoSquared Credentials File gosquared-visitor-count
You need to add a file to the root of the repository called: gosquared-visitor-count
The content of file should be: &amp;lt;threshold&amp;gt; &amp;lt;ID&amp;gt; &amp;lt;secret&amp;gt; varnish &amp;lt;hostname&amp;gt; &amp;lt;api_key&amp;gt;
 Where “threshold” is the max number of customer you want on your site. Where “ID” comes from end of URL when you are logged into gosquared. Where “secret” is a string with no spaces that only you know. Where &amp;ldquo;hostname&amp;rdquo; is the first hostname(domain name) used in your Section Application.</description>
    </item>
    
    <item>
      <title>Aperture overview</title>
      <link>https://www.section.io/docs/reference/aperture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/aperture/</guid>
      <description>Aperture is the Section management dashboard; a web user interface to manage applications, domains and all other components of a customers account.
Section also provides an API API for programmatic interaction with the Section platform.
  </description>
    </item>
    
    <item>
      <title>Blacklist an IP address or a CIDR range</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/threatx/blacklist-an-ip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/threatx/blacklist-an-ip/</guid>
      <description>Overview The ThreatX portal allows you to easily block an IP Address or a CIDR range by adding it to blacklist.
Blacklist an IP Address/CIDR range As first step you will have to log into the ThreatX portal at x.threatx.io and access Settings &amp;gt; IWAF from the navbar.
Select the Blacklist tab and click on Add Entry in the top right corner.
This will present you with a pop to add the IP address or the CIDR range.</description>
    </item>
    
    <item>
      <title>Change optimized image quality</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/optidash/change-image-quality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/optidash/change-image-quality/</guid>
      <description>Overview Optidash module allows the flexibility to control the quality of the optimized image.
How To You can control the optimized image quality by changing the following settings in the advanced configuration settings for Optidash :
 &amp;quot;lossless&amp;quot; : &amp;quot;true/false&amp;quot;  Enable disable lossy compression.
 &amp;quot;quality&amp;quot; : 1 - 100  This options will only be used if the LOSSY option is set to true. Can be a number in the range of 1 - 100.</description>
    </item>
    
    <item>
      <title>Clear Optidash cache</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/optidash/how-to-clear-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/optidash/how-to-clear-cache/</guid>
      <description>Overview There are two ways for clearing Optidash cache.
 Clear the entire Cache Clear a particular image from the cache.  Clear the entire Cache In the advanced configuration settings for Optidash you can change the following parameter
&amp;quot;cache_version&amp;quot; : &amp;quot;v1&amp;quot; Updating the &amp;ldquo;cache_version&amp;rdquo; will clear the entire Optidash cache.
Clear a particular image from the cache. To clear the cache for an individual URL you can use our API: https://aperture.</description>
    </item>
    
    <item>
      <title>Configurations with GIT</title>
      <link>https://www.section.io/docs/reference/configurations-with-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/configurations-with-git/</guid>
      <description>Configuration When you are ready to start creating more advanced configurations for your proxies, you can start editing the configuration files directly. All of the files in your repository can be accessed by visiting Advanced Config under the Application Edge menu in the left nav of Aperture. For more information on more basic configurations done through our GUI, check out quick configuration.
In the repository you can see all the files in your repository, commits to those files, stats, and a branching diagram.</description>
    </item>
    
    <item>
      <title>Consistent Hash</title>
      <link>https://www.section.io/docs/explanations/modules/consistent-hash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/consistent-hash/</guid>
      <description>What does it do This module is built on the Section OpenResty module and provides a more robust upstream definition by load balancing traffic using an internal consistent hash to select the right upstream node.
Available hashed key values:
 True-Client-IP URI Path  See the set up guide to implement this module into your module stack.</description>
    </item>
    
    <item>
      <title>Control User Threshold</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/control-user-threshold/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/control-user-threshold/</guid>
      <description>Overview The Virtual Waiting Room module offers an easy to use interface to control the max number of concurrent users on the site.
Increase/Decrease user threshold The maximum number of concurrent users can be increased/decreased easily by using the counter under the Control Visitor Count section.
  This can also be controlled directly by changing the threshold value in the Advanced Configuration and the GoSquared Credentials file
The default behavior is to force all users to be rechecked if you reduce the number of users allowed on your site.</description>
    </item>
    
    <item>
      <title>Creating an application</title>
      <link>https://www.section.io/docs/tutorials/going-live/create-application-edge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/going-live/create-application-edge/</guid>
      <description>On your main account dashboard, click Create application.  Enter the name of your live web site. Do not include the protocol (i.e. http or https). The system will try to automatically determine the IP of your origin. Click Next.  Click Performance, then click Varnish Cache v5.2 Basic. Click Next.  Enter an account name. Think of this as the organization/company that your website belongs to. (click here a more in-depth explanation of an account).</description>
    </item>
    
    <item>
      <title>CSP Report</title>
      <link>https://www.section.io/docs/explanations/modules/csp-report/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/csp-report/</guid>
      <description>What does it do Automatically detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection.
From https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
 A primary goal of CSP is to mitigate and report XSS attacks. XSS attacks exploit the browser&amp;rsquo;s trust of the content received from the server. Malicious scripts are executed by the victim&amp;rsquo;s browser because the browser trusts the source of the content, even when it&amp;rsquo;s not coming from where it seems to be coming from.</description>
    </item>
    
    <item>
      <title>Design the Waiting Room</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/edit-waiting-room-html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/edit-waiting-room-html/</guid>
      <description>Overview The Virtual Waiting Room module offers a convinient way to design your waiting room page.
Edit the Virtual Waiting Room HTML The HTML to be displayed when the users are put in a queue can be edited under the Upload HTML section.
  A preview of the page after it has been uploaded is provided under the Preview HTML tab.
  </description>
    </item>
    
    <item>
      <title>Example Proxy Stacks</title>
      <link>https://www.section.io/docs/reference/example-proxy-stacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/example-proxy-stacks/</guid>
      <description>Proxy Stack Proxy Stacks are chained Proxies (or Reverse Proxies) and are composed of pre-packaged by Section Modules. These Modules are chained together to give combined functionality.
A simple proxy stack   Simple proxy stack   A medium proxy stack   Medium proxy stack   A complex proxy stack   Complex proxy stack   </description>
    </item>
    
    <item>
      <title>Find a CSP violation report</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/csp-report/find-a-csp-violation-report/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/csp-report/find-a-csp-violation-report/</guid>
      <description>Overview Utilize Section&amp;rsquo;s powerful logging feature to quickly track down which part of a website or application is violating Content Security Policy directives.
Step 1 - Setup CSP Report module Follow the instructions from this page for more details
Step 2 - Search Section logs for violations   Log into your Section portal and click HTTP Logs from the left nav-bar.
  Replace the * in the search box with the following querie</description>
    </item>
    
    <item>
      <title>Going Live</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/going-live/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/going-live/</guid>
      <description>Launch Tutorial</description>
    </item>
    
    <item>
      <title>HTTP Logs</title>
      <link>https://www.section.io/docs/explanations/section/https-logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/https-logs/</guid>
      <description>HTTP Logs Clicking on &amp;ldquo;HTTP Logs&amp;rdquo; in the left navigation bar opens up a view of Kibana. Kibana will allow you to search through your logs to dig deeper into trends you found in Graphite or Grafana. To open Kibana in its own window, click the “open in new window” button at the top of the Kibana frame.
On the Discover view in Kibana, you can either select items from the left nav, or type searches into the search bar.</description>
    </item>
    
    <item>
      <title>ModSecurity</title>
      <link>https://www.section.io/docs/explanations/modules/modsecurity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/modsecurity/</guid>
      <description>Modsecurity Configuration The initial configuration in a repository starts ModSecurity’s SecRuleEngine in DetectionOnly mode (this writes log entries but never executes any disruptive actions) with rules from base_rules &amp;amp; optional_rules. This is a great starting point, as you can immediately see possible threats without stopping legitimate traffic to your site.
Note: Whilst many tutorials and guides use Symbolic Links to have content appear in the rules/activated_rules directory, symbolic links complicate the use of source control &amp;amp; local development.</description>
    </item>
    
    <item>
      <title>OpenResty</title>
      <link>https://www.section.io/docs/explanations/modules/openresty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/openresty/</guid>
      <description>What does it do Use the power of Lua to achieve edge side rewrites and much more.
Install and configure Nginx/Lua on a globally distributed Edge Compute Platform with the confidence of DevOps control.
Section takes the complications out of installing and configuring the software by providing you with:
 A fully managed instance of the most up-to-date version. Git-backed workflows for easy version control. A development environment to test your configurations.</description>
    </item>
    
    <item>
      <title>Optidash Advanced Configuration</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/optidash/optidash-advanced-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/optidash/optidash-advanced-config/</guid>
      <description>Optidash Module Settings Once your application has been set up with Optidash you will find the following settings under Advanced Config &amp;gt; Optidash in the Section Console (Aperture portal).
{ &amp;quot;api_key&amp;quot;: &amp;quot;REDACTED&amp;quot;, &amp;quot;lossless&amp;quot;: false, &amp;quot;enabled&amp;quot;: true, &amp;quot;ttl&amp;quot;: 604800, &amp;quot;cache_version&amp;quot;: &amp;quot;v1&amp;quot;, &amp;quot;s3&amp;quot;: { &amp;quot;key&amp;quot;: &amp;quot;REDACTED&amp;quot;, &amp;quot;secret&amp;quot;: &amp;quot;REDACTED&amp;quot;, &amp;quot;region&amp;quot;: &amp;quot;ap-southeast-2&amp;quot;, &amp;quot;bucket&amp;quot;: &amp;quot;section-kraken&amp;quot; } }   &amp;quot;lossless&amp;quot; : &amp;quot;true/false&amp;quot;  Enable disable lossy compression.
 &amp;quot;quality&amp;quot; : 1 - 100  This options will only be used if the LOSSY option is set to true.</description>
    </item>
    
    <item>
      <title>Radware Bot Manager</title>
      <link>https://www.section.io/docs/explanations/modules/radware-bot-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/radware-bot-manager/</guid>
      <description>What does it do Secure your application from automated threats with Radware Bot Manager
Radware Bot Manager specializes in non-human traffic detection and management. Their best-of-breed bot management solution secures online businesses against automated threats such as content and price scraping, account takeover, gift card fraud, skewed analytics, ad fraud, and application DoS.
Radware’s Bot Manager bot detection engine utilizes multiple techniques to identify bots including proprietary Intent-based Deep Behavior Analysis (IDBA), user behavior analysis, device and browser fingerprinting, IP reputation, and machine learning.</description>
    </item>
    
    <item>
      <title>Review Your Metrics</title>
      <link>https://www.section.io/docs/tutorials/performance-optimization/review-your-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/performance-optimization/review-your-metrics/</guid>
      <description>WHY: To understand how to improve your site, you first need a benchmark for where you are now.
HOW: After you go live, wait about an hour for data to populate. While Section’s real time reporting will show data inside the first minute of go live, you should wait an hour for trends to emerge. Then use the evaluation guide above to look at your key metrics.</description>
    </item>
    
    <item>
      <title>Set up Consistent Hash</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/consistent-hash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/consistent-hash/</guid>
      <description>Overview This tutorial will guide you through the process of adding the Consistent Hashing module to your proxy stack with default configuration files. This tutorial assumes you&amp;rsquo;ve cloned your application&amp;rsquo;s git repository to your local machine.
Step 1 - Updating section.config.json  Add the following object to your proxystack array in your section.config.json file located in the root of your repository.  { &amp;quot;name&amp;quot;: &amp;quot;consistenthash&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;consistenthash:1.0.0&amp;quot; }  Typically this is added downstream of the module you want to load balance traffic to based on the consistent hash.</description>
    </item>
    
    <item>
      <title>Set up Modsecurity</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/modsecurity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/modsecurity/</guid>
      <description>Please contact a Section engineer by emailing support@section.io.</description>
    </item>
    
    <item>
      <title>Set up Radware Bot Manager</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/radware-bot-manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/radware-bot-manager/</guid>
      <description>Overview This tutorial will guide you through the process to adding the Radware Bot Manager module to your proxy stack with default configuration files. This tutorial assumes you&amp;rsquo;ve cloned your application&amp;rsquo;s git repository to your local machine.
Step 1 - Updating section.config.json  Add the following object to your proxystack array in your section.config.json file located in the root of your repository.  { &amp;quot;name&amp;quot;: &amp;quot;radwarebotmanager&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;radware-bot-manager:5.3.4&amp;quot; }  You can add this module at any index in your proxystack array.</description>
    </item>
    
    <item>
      <title>Set up Signal Sciences</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/signal-sciences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/signal-sciences/</guid>
      <description>Overview This tutorial will guide you through the process to adding the Signal Sciences module to your proxy stack with default configuration files.
Setting up Signal Sciences when setting up an application When creating your application you will want to select the Signal Sciences on the second page of the setup process.
  Setting up Signal Sciences on an existing application Step 1 - Adding default files  Clone the application repository by selecting the Advanced Config option in the left sidebar and copying the repo URL.</description>
    </item>
    
    <item>
      <title>Set up Sitespect</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/sitespect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/sitespect/</guid>
      <description>Please contact a Section engineer by emailing support@section.io.</description>
    </item>
    
    <item>
      <title>Set up the Section CLI tool</title>
      <link>https://www.section.io/docs/tutorials/launching-a-nodejs-app/set-up-sectionctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/launching-a-nodejs-app/set-up-sectionctl/</guid>
      <description>Download and install sectionctl Go to GitHub to download the latest release of sectionctl for your platform.
On Linux this looks like:
wget https://github.com/section/sectionctl/releases/download/v1.8.0/sectionctl-v1.8.0-linux-amd64.tar.gz tar zxvf sectionctl-v1.8.0-linux-amd64.tar.gz Then place the executable on your path and ensure it&amp;rsquo;s executable.
On Linux this looks like:
mv sectionctl /usr/local/bin/sectionctl chmod +x /usr/local/bin/sectionctl Configure authentication To set up credentials so the CLI tool works, run:
sectionctl login This will prompt you for your Section username and password, and securely store them where sectionctl can find them.</description>
    </item>
    
    <item>
      <title>Set-up Section Developer PoP</title>
      <link>https://www.section.io/docs/tutorials/developer-workflow/setting-up-your-developer-pop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/developer-workflow/setting-up-your-developer-pop/</guid>
      <description>Section Developer PoP runs on Kubernetes. Minikube is a miniature, prepackaged Kubernetes cluster that works locally on a desktop Microsoft Windows, Mac or Linux computer.
Minikube runs in the free and open source VirtualBox.
 Verify that you have installed VirtualBox Download and install Minikube v1.6.2. Version 1.6.2 is the Section supported version of Minikube. https://github.com/kubernetes/minikube/releases/tag/v1.6.2 Download and install kubectl v1.16.2. Version v1.16.2 is the Section supported version of kubectl. https://kubernetes.</description>
    </item>
    
    <item>
      <title>Signal Sciences</title>
      <link>https://www.section.io/docs/explanations/modules/signal-sciences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/signal-sciences/</guid>
      <description>What does it do Providing real-time protection for any application, against any attack, with integrations into any DevOps toolchain.
Signal Sciences was created by CISOs, CTOs, and engineers looking to integrate advanced website security with cloud solutions and DevOps workflows. Signal Sciences analyzes and blocks threats in real-time, with 95% of customers using it in blocking mode, reducing false positives while identifying more threats than other solutions.
Signal Sciences uses contextual information and next-generation cloud analysis to immediately block threats while sending detailed insights to an intuitive dashboard so your development and operations teams can work together to continually improve your web application’s security.</description>
    </item>
    
    <item>
      <title>SiteSpect</title>
      <link>https://www.section.io/docs/explanations/modules/sitespect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/sitespect/</guid>
      <description>What does it do SiteSpect provides the world’s only tag-free web and mobile site optimization platform, enabling online businesses to test everything and target anyone.
SiteSpect gives you the power to test your ideas, discover insights, and personalize the entire customer journey. Optimize the user experience without the limitations of JavaScript tags. Typical customers see 10% RPV Lift, 10% Conversion Lift, and a 10X Revenue Benefit.
The world’s leading digital companies rely on SiteSpect to help them:</description>
    </item>
    
    <item>
      <title>ThreatX</title>
      <link>https://www.section.io/docs/explanations/modules/threat-x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/threat-x/</guid>
      <description>What does it do ThreatX is a reverse proxy that inspects and adapts to web site attacks that can infiltrate your web site and cause problems for your business.
Because ThreatX doesn&amp;rsquo;t simply rely upon statically defined rule sets like old WAFs (and CDNs based on those old WAFs) you can expect a higher degree of security.
This also means that there&amp;rsquo;s a lower cost to maintain that level of security, because the adaptive nature of the platform means that you don&amp;rsquo;t need to spend time and money on in-house security experts to keep your rules up to date.</description>
    </item>
    
    <item>
      <title>Toggle Virtual Waiting Room Module</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/toggle-virtual-waiting-room/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/toggle-virtual-waiting-room/</guid>
      <description>Overview The modular nature of the Section platform allows you to easily turn the module on or off. When in a disabled state the module acts as a reverse proxy.
Toggle Virtual Waiting Room The Virtual Waiting Room can easily be turned on and off using the toggle provided under the Control Visitor Count section.
  This can also be controlled directly from the Advanced Configuration.</description>
    </item>
    
    <item>
      <title>Understanding Cache Effectiveness</title>
      <link>https://www.section.io/docs/how-tos/performance/understand-if-your-varnish-cache-is-effective/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/performance/understand-if-your-varnish-cache-is-effective/</guid>
      <description>Whenever a request reaches a Varnish Cache instance, one of four outcomes occurs: hit, miss, pass, or synth.
A key metric when evaluating website performance is cache hit rate. Cache hit rate is a measure of how effectively the cache is responding to customer requests.
A hit means that the cache responded to the request with a cached resource.
A miss means that the cache tried to respond to the request with a cached resource but could not do so because it did not have a copy of the requested resource in its memory.</description>
    </item>
    
    <item>
      <title>Using Virtual Waiting Room Advanced Configuration</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/virtual-waiting-room-advanced-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/virtual-waiting-room/virtual-waiting-room-advanced-configuration/</guid>
      <description>Virtual Waiting Module Settings Once your application has been set up with Virtual Waiting Room you will find the following files under Advanced Config &amp;gt; virtualwaitingroom in the Aperture portal.
virtualwaitingroom.json virtualwaitingroom.json will contain the configuration of your virtual waiting room and should have the following data.
 The settings are as follows :
 &amp;quot;api_key&amp;quot; : &amp;quot;&amp;lt;YourGoSquaredAPIKey&amp;gt;&amp;quot;  This will be provided by the Sectin support team.
 &amp;quot;threshold&amp;quot; : 1000  Threshold is the max number of concurrent customers you want on your site.</description>
    </item>
    
    <item>
      <title>Varnish Cache</title>
      <link>https://www.section.io/docs/explanations/modules/varnish-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/varnish-cache/</guid>
      <description>What does it do Section implements a pure and unchanged version of the Varnish Cache.
At every opportunity, the implementation of Varnish Cache on the Section platform has been designed to be as close as possible to how it would be if you had installed Varnish Cache yourself locally.
Section uses the official Varnish Cache distributions published by Varnish Cache. Section does not use custom-compiled builds of Varnish Cache.
Varnish Cache is started, listening on port 80.</description>
    </item>
    
    <item>
      <title>Virtual Waiting Room</title>
      <link>https://www.section.io/docs/explanations/modules/virtual-waiting-room/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/virtual-waiting-room/</guid>
      <description>What does it do Maintain control of user experience on your website even during periods of extreme traffic.
Don’t let excess traffic volumes destroy every user’s experience When an unexpected peak traffic event occurs on your website, Section’s Edge Compute Platform can route a nominated portion of users to a Virtual Waiting Room where they can remain while other users successfully navigate, engage with and transact with your website.
Optimal User Experience By placing excess users into the Virtual Waiting Room, the users who are on your website can continue to navigate, search, engage and transact with your website.</description>
    </item>
    
    <item>
      <title>Whitelist an IP Address or a CIDR Range</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/threatx/whitelist-an-ip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/threatx/whitelist-an-ip/</guid>
      <description>Overview By whitelisting an IP address or a CIDR range you can instruct Threat-X to not inspect requests from those IPs. The ThreatX portal allows you to easily whitelist an IP Address or a CIDR range.
Whitelist an IP Address/CIDR range As first step you will have to log into the ThreatX portal at x.threatx.io and access Settings &amp;gt; IWAF from the navbar.
Select the Whitelist tab and click on Add Entry in the top right corner.</description>
    </item>
    
    <item>
      <title>Better than a CDN</title>
      <link>https://www.section.io/docs/explanations/section/better-than-a-cdn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/better-than-a-cdn/</guid>
      <description>The Section platform provides superior application performance, availability, scalability, and security by putting architects, developers, and sysadmins in the driver&amp;rsquo;s seat.
Unlike legacy CDN&amp;rsquo;s, Section has designed an Application Edge system for modern agile development.
Section differs from contemporary CDN platforms by:
 allowing a choice of reverse proxy technology. allowing engineers to use normal tooling to configure the system. providing a real time devops toolset.  Unlike with legacy CDNs, with Section:</description>
    </item>
    
    <item>
      <title>Create a New Environment</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/create-a-new-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/create-a-new-environment/</guid>
      <description>This is a guide for setting up a new environment within an existing Section application.
1) Log Into Aperture 2) Click on the Application in which you want the new environment The number of options that appear here will vary depending on the number of applications associated with your account.
3) Click on the Create Environment button   4) Fill in New Environment Name This environment name becomes the name of a git branch within your application repository for the new environment&amp;rsquo;s config.</description>
    </item>
    
    <item>
      <title>Creating an API Key</title>
      <link>https://www.section.io/docs/how-tos/api-keys/creating-an-api-key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/api-keys/creating-an-api-key/</guid>
      <description>Introduction Section allows you to create API Tokens that belongs to your user. API Tokens will have the same permissions as your user has at the time of creation. When your user is deleted, this key will persist.
Creating an API Token Go to the User Setting page by clicking on your profile picture in the top right then select API Tokens:
Enter a description for what this API Token will be used for, and then click the Add button:</description>
    </item>
    
    <item>
      <title>Discover your quick Cache Wins</title>
      <link>https://www.section.io/docs/how-tos/performance/discover-your-quick-cache-wins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/performance/discover-your-quick-cache-wins/</guid>
      <description>Your website has several different types of content that can be cached: HTML, Images, CSS, and JS are the main file types for consideration.
 HTML is the set of instructions required to load the page. Images are any images or icons you load. CSS is the style instruction for how to load images, text, and content on the page. JS is small scripts your browser will run when it is instructed to by the HTML.</description>
    </item>
    
    <item>
      <title>Load Setup Into Developer PoP</title>
      <link>https://www.section.io/docs/tutorials/developer-workflow/loading-your-setup-into-the-developer-pop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/developer-workflow/loading-your-setup-into-the-developer-pop/</guid>
      <description>1. Clone application&amp;rsquo;s git repository Clone your application&amp;rsquo;s git repository located in the Advanced Config menu in the Section portal.
  URL from GIT repo   Clone with git clone &amp;lt;url-from-advanced-config&amp;gt;
2. Add the Dev PoP remote to your repository  Open the Dev Pop UI: minikube service -n section-shared developer-pop    Section app ready to connect to Aperture   Connect Aperture   Connect to Aperture button   Grant Access  The application section.</description>
    </item>
    
    <item>
      <title>Set up an example Node.js app</title>
      <link>https://www.section.io/docs/tutorials/launching-a-nodejs-app/set-up-an-example-nodejs-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/launching-a-nodejs-app/set-up-an-example-nodejs-app/</guid>
      <description>Next, we&amp;rsquo;re going to set up a NuxtJS app for you to deploy to Section&amp;rsquo;s Edge App Hosting.
Setup First, let’s make sure that your local development workspace is ready.
 If you don’t have Node.js installed, install it from here. You’ll need Node.js version 10.14 or later. You’ll be using your own text editor and terminal app for this tutorial.  If you are on Windows, we recommend downloading Git for Windows and use Git Bash that comes with it, which supports the UNIX-specific commands in this tutorial.</description>
    </item>
    
    <item>
      <title>Set up Cloudinary</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/cloudinary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/cloudinary/</guid>
      <description>Table of contents  Please contact a Section engineer by emailing support@section.io.</description>
    </item>
    
    <item>
      <title>Set up DNS</title>
      <link>https://www.section.io/docs/tutorials/going-live/set-up-dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/going-live/set-up-dns/</guid>
      <description>To get your users to connect to Section servers you need to make updates to DNS.
This DNS change will point the traffic to Section servers.
This tutorial works with a domain name that contains a prefix, like the www. prefix in www.section.io.
If you are working with a site that doesn&amp;rsquo;t have a prefix please look at bare domain support with Section.
 Set up the CNAME record  In the management console, click DNS in the left hand menu.</description>
    </item>
    
    <item>
      <title>Setup your Local Environment</title>
      <link>https://www.section.io/docs/tutorials/performance-optimization/setup-your-local-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/performance-optimization/setup-your-local-environment/</guid>
      <description>WHY: Before you make any changes to your cache configuration, we recommend you test them locally first. In order to test, you need to setup your local environment.
HOW: To test configuration changes locally, visit our Developer PoP tutorial. Many customers also choose to integrate a staging site with the Section platform as a part of their developer workflow. If you do not want to do this step, you can skip it and make your changes live on production.</description>
    </item>
    
    <item>
      <title>Support</title>
      <link>https://www.section.io/docs/additional-information/support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/additional-information/support/</guid>
      <description>Section Engineering Support Section offers 24x7 support for all customer issues via email, web and chat.
Contacting Support In order for our Customer Engineering team to best support your incident please provide a detailed overview of your issue, the affected environment and the overall priority level.For urgent issues email our support team.
 Email Support: support@section.io Web Support: Login (or create an account) to submit your request via our web form - https://support.</description>
    </item>
    
    <item>
      <title>Using an API Key</title>
      <link>https://www.section.io/docs/how-tos/api-keys/using-an-api-key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/api-keys/using-an-api-key/</guid>
      <description>Using an API Token Use your API Token by adding it to your requests in the Section-Token header.
curl -H &amp;#34;Section-Token: YOUR-API-TOKEN-HERE&amp;#34; https://aperture.section.io/api/v1 API Tokens can also be used to authenticate git when accessing the Section config repository for your application.
When git prompts for your username, enter section-token, and use the API Token value as the password.</description>
    </item>
    
    <item>
      <title>Agency Ready</title>
      <link>https://www.section.io/docs/explanations/section/agency-ready/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/agency-ready/</guid>
      <description>Section is built to streamline the process of managing groups of websites.
If you work at an agency, you&amp;rsquo;re familiar with the unique challenges that come with overseeing large groups of sites. You want to be able to:
 log in with one user account for yourself and see all your client sites. give separate logins to individual clients so that they can see only their data and not that of your other clients.</description>
    </item>
    
    <item>
      <title>Check your current DNS setup</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/check-your-current-dns-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/check-your-current-dns-setup/</guid>
      <description>From a terminal   Run dig +trace www.yourdomain.com. If you are unable to run this command locally, leverage an online tool such as Kloth.   Click to expand an example   $ dig +trace www.example.com; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.11.0-P5 &amp;lt;&amp;lt;&amp;gt;&amp;gt; +trace www.example.com;; global options: +cmd. 488165 IN NS f.root-servers.net.. 488165 IN NS g.root-servers.net.. 488165 IN NS h.root-servers.net.. 488165 IN NS i.root-servers.net.. 488165 IN NS j.</description>
    </item>
    
    <item>
      <title>Deploy your Node.js app</title>
      <link>https://www.section.io/docs/tutorials/launching-a-nodejs-app/deploy-your-nodejs-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/launching-a-nodejs-app/deploy-your-nodejs-app/</guid>
      <description>Before you deploy, make sure you have set up an example Node.js app.
Find the name of your app Find the ID of your account:
sectionctl accounts The output will look something like this:
| ACCOUNT ID | ACCOUNT NAME | |------------|-----------------------------------| | 1335 | g9ts24tx7gm8n12b2evf3.section.dev | Note the number value in the account ID column – we&amp;rsquo;re about to use it to list applications you have access to:
sectionctl apps list --account-id 1335 The output will look something like this:</description>
    </item>
    
    <item>
      <title>Develop with the Developer PoP</title>
      <link>https://www.section.io/docs/tutorials/developer-workflow/developing-with-the-developer-pop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/developer-workflow/developing-with-the-developer-pop/</guid>
      <description>1. Locally Override DNS to point at the Developer PoP You will need to modify your local host file and point the Hosted Name(s) for your service at the IP address given by the command minikube ip.
192.168.99.100 www.example.com This will override the DNS endpoint for that domain and force traffic through the Dev PoP and then to your origin address.
Your origin could be your production webserver, production load balancer, development webserver — whatever you configured for in the Dev PoP UI.</description>
    </item>
    
    <item>
      <title>Enable Automatic SSL</title>
      <link>https://www.section.io/docs/tutorials/going-live/enable-automatic-ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/going-live/enable-automatic-ssl/</guid>
      <description>Turning on automatic HTTPS  In the management console, click HTTPS in the left hand menu.  Click Renew Certificate. You&amp;rsquo;ll get a message saying that your certificates have been set up.   Congratulations! You are now live with Section.
If you have any trouble, consider looking at our HTTPS Troubleshooting guides.
 </description>
    </item>
    
    <item>
      <title>Optimize your Configuration</title>
      <link>https://www.section.io/docs/tutorials/performance-optimization/optimize-your-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/performance-optimization/optimize-your-configuration/</guid>
      <description>WHY: Based on your metrics evaluation, you should have identified areas you want to improve. These changes will help you get the most out of Section
HOW: To optimize your configuration, please visit our modules page and browse our guides on the modules in your stack.</description>
    </item>
    
    <item>
      <title>Uncover how often you are using HTTPS</title>
      <link>https://www.section.io/docs/how-tos/performance/uncover-how-often-you-are-using-https/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/performance/uncover-how-often-you-are-using-https/</guid>
      <description>What is HTTP(S)? HTTP is a protocol for how web requests are handled. HTTPS is an enhanced version of that protocol to add security by encrypting your customers data so it is protected from threats. You can see when a webpage has HTTPS because the url will show a green padlock.
Why is it important? The percentage of requests that have HTTPS show how often your customer data is protected. If this ratio is low, you are putting your customers’ data at a higher risk for incident.</description>
    </item>
    
    <item>
      <title>Global Network</title>
      <link>https://www.section.io/docs/explanations/section/global-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/global-network/</guid>
      <description>The Section platform runs a high availability Global Network so that your Application Edge is ready when and where your customers need it.
Section forms its Global Network by combining the network, compute and security features of the most popular cloud services such as:
 Amazon AWS Google Compute Engine Microsoft Azure DigitalOcean Packet Rackcorp  Our reach continues to grow as Section incorporates more cloud providers into its Global Network.</description>
    </item>
    
    <item>
      <title>Track your Changes</title>
      <link>https://www.section.io/docs/tutorials/performance-optimization/track-your-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/performance-optimization/track-your-changes/</guid>
      <description>WHY: Everytime you change your configuration, Section will log that history. This allows you to see what was changed and then review metrics to see how your site performed before and after the change.
HOW: In the repository tab under commits you will see a list of the commits that have been made to your application. You can see what that looks like for Bootcamp here.</description>
    </item>
    
    <item>
      <title>Monitor your Website</title>
      <link>https://www.section.io/docs/tutorials/performance-optimization/monitor-your-website/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/performance-optimization/monitor-your-website/</guid>
      <description>WHY: You may not want to be checking your metrics everyday, but you want to know if something is wrong so you can fix it. With Alerts you can set benchmarks for your metrics and be alerted via your preferred notification system.
HOW: Under the alerting tab you can identify a metric using graphite query string and at what value you want to be alerted. More details here.
For more in-depth guides on evaluating your website&amp;rsquo;s performance and activity, see our debugging and monitoring guides.</description>
    </item>
    
    <item>
      <title>Proxy Options</title>
      <link>https://www.section.io/docs/explanations/section/proxy-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/proxy-options/</guid>
      <description>Unlike Legacy CDNs which generally are fixed on a single proxy, Section allows you to choose the proxies that suit your application architecture.
Depending on your needs, you can run a single module or combine multiple modules for enhanced performance benefit:
 Performance: Varnish Cache (versions 3, 4, 5, 6). Google&amp;rsquo;s PageSpeed. Nginx, and Nginx+Lua. Scalability: Varnish Cache . Nginx. Availability: Varnish Cache . Nginx+Lua. Security: ModSecurity. ThreatX. Signal Sciences.  These are just some of the reverse proxies that are available to you.</description>
    </item>
    
    <item>
      <title>Developer Ready</title>
      <link>https://www.section.io/docs/explanations/section/developer-ready/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/developer-ready/</guid>
      <description>For too long, CDNs have remained in the dark ages of waterfall processes with no integration into the agile development lifecycle. Agile methods just aren&amp;rsquo;t something that CDNs understand.
As application logic moves to the edge, Section brings the tools and processes you need to build an ideal, flexible architecture.
By allowing any engineer in your team to run a Developer PoP, you can bring the Application Edge right down onto your laptop.</description>
    </item>
    
    <item>
      <title>Devops Ready</title>
      <link>https://www.section.io/docs/explanations/section/devops-ready/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/devops-ready/</guid>
      <description>Whether a website is yours or your client&amp;rsquo;s, you need to have the right information available to you immediately when you&amp;rsquo;re running a mission critical application.
Section runs a detailed, real-time logging and metrics platform to provide you with the vital diagnostics.
DevOps teams need a few things to get their job done well:
 Continual improvement: Section collects hundreds of metrics about how your HTTP traffic is performing and provides long term retenion out of the box.</description>
    </item>
    
    <item>
      <title>DNS Options</title>
      <link>https://www.section.io/docs/explanations/section/dns-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/dns-options/</guid>
      <description>Section uses DNS to route requests to the most appropriate datacenter.
When you sign up for Section, you configure a CNAME record to point your traffic to our Application Edge, just like a legacy CDN.
Section also includes a global anycast DNS network with all plans. This can be useful if you run your site as a bare domain.
Whilst you can choose to move your DNS to our nameservers, that&amp;rsquo;s completely optional at all plan levels.</description>
    </item>
    
    <item>
      <title>HTTPS Options</title>
      <link>https://www.section.io/docs/explanations/section/https-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/https-options/</guid>
      <description>All Section plans include a complete HTTPS solution.
On our platform you can:
 Take advantage of our free SSL certificates that are automatically configured and renewed. Upload your own Standard, Wildcard, or Extended Validation certificate  </description>
    </item>
    
    <item>
      <title>Optimize Bigcommerce with Section</title>
      <link>https://www.section.io/docs/tutorials/integrations/bigcommerce/optimize-bigcommerce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/integrations/bigcommerce/optimize-bigcommerce/</guid>
      <description>Configure Caching and HTML Streaming  Set the static caching and HTML Streaming features toggles to true.  sub vcl_recv {# Section feature toggles.if (!req.http.section-enable-static-caching) {set req.http.section-enable-static-caching = &amp;quot;true&amp;quot;;}if (!req.http.section-enable-html-streaming) {set req.http.section-enable-html-streaming = &amp;quot;true&amp;quot;;}}Configure HTML Streaming by whitelisting paths.   # SWITCH for HTML streaming,if(req.http.section-enable-html-streaming == &amp;quot;true&amp;quot; &amp;amp;&amp;amp; (req.url ~ &amp;quot;(?i)^/(?=\?|&amp;amp;|$)&amp;quot; ||req.url ~ &amp;quot;\/sale\/shoes\/.*&amp;quot; ||req.url ~ &amp;quot;\/outlet\/promotion\/.*&amp;quot; || req.</description>
    </item>
    
    <item>
      <title>Set up a Magento 2 app on Section</title>
      <link>https://www.section.io/docs/tutorials/integrations/magento-setup/set-up-magento-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/integrations/magento-setup/set-up-magento-2/</guid>
      <description>The following is a guide to going live on Section with a Magento 2 application.
1) Download the Section extension. a) Via the Magento Marketplace To get started with Section and Varnish Cache directly from the Magento Admin portal, you first must download the &amp;ldquo;Instant Global Cache&amp;rdquo; extension from the Magento Marketplace.
b) Via the command line Add &amp;quot;sectionio/metrics&amp;quot;: &amp;quot;dev-master&amp;quot; to your composer.json file and run composer update. This assumes that your application is configured to pull from Packagist.</description>
    </item>
    
    <item>
      <title>Set up Drupal 8 on Section</title>
      <link>https://www.section.io/docs/tutorials/integrations/drupal-setup/set-up-drupal-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/integrations/drupal-setup/set-up-drupal-8/</guid>
      <description>The following is a guide to installing the Section Drupal module into an existing Drupal 8 application. This module allows Section&amp;rsquo;s global, distributed caching layer to quickly respond to invalidation events from a Drupal instance in exactly the same way that Drupal&amp;rsquo;s internal cache or a local varnish cache running on the host machine does, ensuring that the content in Section&amp;rsquo;s global caching layer is never stale.
Prerequisites  An existing Section application.</description>
    </item>
    
    <item>
      <title>TTFB Bigcommerce with Section</title>
      <link>https://www.section.io/docs/tutorials/integrations/bigcommerce/ttfb-bigcommerce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/integrations/bigcommerce/ttfb-bigcommerce/</guid>
      <description>Time To First Byte (TTFB) Time To First Byte is an important metric for user experience as people do not wait for slow pages to load.
 TTFB is a metric of the time taken for a user to receive the first byte. Start render time is crucial because it represents the time the user is waiting while looking at a blank screen. There is a high correlation between start render time and bounce rate, so significantly improving this metric has tangible business benefits.</description>
    </item>
    
    <item>
      <title>Set up and optimize Magento 1 on Section</title>
      <link>https://www.section.io/docs/tutorials/integrations/magento-setup/set-up-magento-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/integrations/magento-setup/set-up-magento-1/</guid>
      <description>Options to optimize HTML:  HTML Streaming - https://www.section.io/html-streaming/ Anonymous User Caching (Recommended) - https://community.section.io/t/a-novel-way-to-cache-html/79 Turpentine - Detail below  Set up Varnish Cache Caching Magento 1.9 and earlier does not support Varnish Cache out of the box. Support is instead provided by the [free Turpentine Magento extension].
The Turpentine extension issues commands required for correct operation to a management port intended for Varnish Cache. A special “bridge” program listens on this port, and makes the Section platform look like a normal Varnish Cache instance (Instead of a globally distributed platform that runs Varnish Cache for you).</description>
    </item>
    
    <item>
      <title>Set up Bigcommerce on Section</title>
      <link>https://www.section.io/docs/tutorials/integrations/bigcommerce/set-up-bigcommerce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/tutorials/integrations/bigcommerce/set-up-bigcommerce/</guid>
      <description>Bigcommerce optimization on Section with caching, location optimization and HTML Streaming are paid features and managed services, please contact us to learn more.
Create a Bigcommerce store Sign-up at Bigcommerce to set up a store and assign a domain.
 Sign up &amp;amp; create a store at Bigcommerce. Use the final DNS name that your site will be accessed. Follow the standard Bigcommerce instructions to add the domain to the Bigcommerce site.</description>
    </item>
    
    <item>
      <title>Terminology</title>
      <link>https://www.section.io/docs/reference/platform-checklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/platform-checklist/</guid>
      <description>Overview of the key entities and account structure referred to throughout Section.
   Component Function Description     Account Organization Users can be associated with one or many accounts. Accounts represent organizations like businesses. The Account is the master structure of Section. Accounts may contain many Applications and Users.   API API Section JSON RESTful API to manage the users, accounts, applications, environments, domains and logging.</description>
    </item>
    
    <item>
      <title>Modules</title>
      <link>https://www.section.io/docs/reference/modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/modules/</guid>
      <description>Section offers a number of different modules that can be used in your edge deployment.
Section also allows you to build your own modules and run custom workloads on our edge network throughout the world. You can get started with building your own module with the example module assets provided by Section : Module Build Assets.
A module template is a combination of the module software (eg. Varnish Cache) and a set of default files to configure the module (eg.</description>
    </item>
    
    <item>
      <title>Add a user to your account</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/user-management/add-a-user-to-your-account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/user-management/add-a-user-to-your-account/</guid>
      <description>Invite a New User via email To invite a new user to your account:
  Invite a New User via email    Click on Account and then Manage Users in the top right of the management console. Enter the user details of the person you want to invite, and click Invite User.  The invited user will receive an email inviting them to join Section and have immediate access to your account.</description>
    </item>
    
    <item>
      <title>Adding a New Domain to Section</title>
      <link>https://www.section.io/docs/reference/new-app-or-env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/new-app-or-env/</guid>
      <description>When you want to add a domain to Section, it is sometimes unclear where that domains should fit into your existing account, application, and environment structure. This guide will help you decide whether it is most appropriate to create a new application, create a new environment, or add a new domain to an existing environment.
My new website is a staging/uat site for a production site that I have running or want to run on Section The purpose of Section&amp;rsquo;s application-environment structure is to streamline the configuration testing and promotion process for modules in your stack.</description>
    </item>
    
    <item>
      <title>Aperture Overview</title>
      <link>https://www.section.io/docs/explanations/section/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/section/monitoring/</guid>
      <description>Each Section environment has its own overview page. The overview page displays general information about the environment&amp;rsquo;s module stack and HTTP request flow, any recent errors between Section and the origin server, and a number of links to more detailed information about the environment such as DNS information and HTTP logs.
Module Stack All module stack configurations running on Section begin with the edge module (the very first module that incoming HTTP requests hit when they enter Section) and ends with the LastProxy (the last module that incoming HTTP requests pass through before leaving Section and hitting your origin server).</description>
    </item>
    
    <item>
      <title>API Caching</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/api-caching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/api-caching/</guid>
      <description>Overview Varnish Cache can be used to cache an API. By caching a JSON RESTFul API an application running on the edge can be made to run faster.
This how-to describes using the Varnish Module on the Section platform to cache an Application Programming Interface (API).
For example, an application running in a Section Node.js Module on the Edge can cache commonly used API routes in a &amp;ldquo;varnishapi&amp;rdquo; Varnish Cache Module.</description>
    </item>
    
    <item>
      <title>Bare Domains</title>
      <link>https://www.section.io/docs/reference/bare-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/bare-domains/</guid>
      <description>Bare domains (sometimes called naked domains, or apex domains) present a challenge to DNS, because they do not permit the use of CNAME records at the zone apex.
Your website runs on as a bare domain if you are using a name like https://example.com. Notice there is no prefix like &amp;ldquo;www.&amp;rdquo; or &amp;ldquo;shop.&amp;rdquo; before example.com.
In most situations, we recommend moving off your bare domain so that your website uses a prefix.</description>
    </item>
    
    <item>
      <title>Basic Logging</title>
      <link>https://www.section.io/docs/how-tos/debugging/basic-logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/basic-logging/</guid>
      <description>In this document and video we get a basic demo of how to search the HTTP Logs in Section&amp;rsquo;s dashboard called Aperture.
Use the Kibana 4 HTTP Logs to debug the proxy stack for possible issues with origin or the application in Section.
   Intro 0:00 First time setup 1:33 Basics 2:17 Filters 3:26 Manual search 5:28 Tip 1 - faster work flow 6:52 Tip 2 - CSV exporter 7:24  HTTP Logs Login to Section&amp;rsquo;s dashboard Aperture and click the HTTP Logs link.</description>
    </item>
    
    <item>
      <title>Billing Portal</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/user-management/billing-portal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/user-management/billing-portal/</guid>
      <description>Once you have set up your account, you will have access to your billing portal within the Account dashboard. The Billing Portal is where you can update your card, view your invoices or cancel your account — all from one convenient interface.
To navigate to the Billing Portal, first click on the &amp;ldquo;gear&amp;rdquo; icon in your menu then navigate to &amp;ldquo;Account&amp;rdquo;. Here you will find the &amp;ldquo;Visit Billing Portal&amp;rdquo; button which will take you to our hosted billing portal.</description>
    </item>
    
    <item>
      <title>Block a request</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/block-a-request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/block-a-request/</guid>
      <description>Overview Varnish Cache allows you to create synthetic HTTP responses with the use of vcl_synth. This can be used to deliver a 403 forbidden status code. These config changes are typically made under Advanced Config -&amp;gt; varnish -&amp;gt; default.vcl for the respective branch.
VCL syntax Below is an example of how to deliver a synthetic 403 response using VCL syntax 4.0. This example will deliver a 403 response if the request matches the URI path &amp;ldquo;/admin&amp;rdquo;:</description>
    </item>
    
    <item>
      <title>Block IP</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/blocking-requests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/blocking-requests/</guid>
      <description>If visitors, crawlers, or spammers are degrading the performance of your site, it may be appropriate to block these from accessing your website content.
Rather than letting these requests be processed by Section and your origin server, you can block them as they enter Section.
There are two approaches to Blocking IP&amp;rsquo;s.
 IP Restrictions screen in Aperture web dashboard section.config.json in Advanced Config &amp;amp; git workflow  The simplest interface to view/edit these values is available via &amp;ldquo;Configuration&amp;rdquo; &amp;gt; &amp;ldquo;IP Restrictions&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Change your Origin Address</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/change-origin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/change-origin/</guid>
      <description>Section is a proxy service, so at the end of the day, any requests for your site that have not been offloaded by the cache or redirected or blocked by the firewall will be passed on to be served by your webserver. The address of this server (or the address of the load balancer in front of your servers) is the origin address.
When your first setup your site on Section we resolve the DNS of the hostname you enter and set that as the origin address.</description>
    </item>
    
    <item>
      <title>Check your current HTTPS setup</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/check-your-current-https-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/check-your-current-https-setup/</guid>
      <description>Using the command line - OpenSSL  Open a terminal. Run openssl s_client -showcerts -connect www.example.com:443 &amp;lt;/dev/null, with your domain name. If successful, you&amp;rsquo;ll receive a complete output of what a browser uses to establish secure HTTP.  Using an online tool - DigiCert  Browse to an online certificate checking service such as: https://www.digicert.com/help Enter your domain name and initiate the check Verify your setup receives a tick at the bottom of the test  </description>
    </item>
    
    <item>
      <title>Cloudinary</title>
      <link>https://www.section.io/docs/explanations/modules/cloudinary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/cloudinary/</guid>
      <description>What does it do Image optimisation module that will compress, resize, crop, transform images to suit the customer&amp;rsquo;s use case. Use Cloudinary to deliver the optimal image for every image viewing context.
Deploying on-the-fly image manipulation and optimization for your website is super simple on Section. Deploy Cloudinary on Section to access all the benefits of the Cloudinary Image Optimization suite:
 High-performance image optimization Crop, scale, transcode, enhance images on the fly Dynamic scaling and cropping of responsive images Device recognition and image manipulation to suit  Deliver faster page loads Image optimization for web is one of the most important elements of delivering faster pages.</description>
    </item>
    
    <item>
      <title>Commercial Terms</title>
      <link>https://www.section.io/docs/additional-information/commercial-terms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/additional-information/commercial-terms/</guid>
      <description>Per GB Rates Each 1000 pages served on the Section platform includes 3GB of data. Where data used exceeds 3GB on average per 1000 pages served in any billing period, the following excess GB charges will apply:
   Region Rate per GB     US $0.05   Europe $0.05   Singapore $0.08   Tokyo $0.12   Australia $0.12   South America $0.</description>
    </item>
    
    <item>
      <title>Configure Dynamic Content Caching</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/dynamic-caching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/dynamic-caching/</guid>
      <description>Caching is so effective at boosting website performance because delivering web content involves extreme repetition. Web servers receive requests for identical static assets and HTML documents thousands (or hundreds of thousands) of times per day. Caching allows the web server delegate this repetition to the caching layer and only respond to a small fraction of these requests. Eliminating this repetition makes your web server significantly more efficient and can drastically reduce server costs.</description>
    </item>
    
    <item>
      <title>Configure GEO-based origin selection</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/geo-based-origin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/geo-based-origin/</guid>
      <description>GEO based origin selection Below is an example of how to configure your Content Delivery Grid to direct requests to different origins based on the requesting user&amp;rsquo;s GEO location.
Prerequisites:
 Section account Section application running Varnish A separate origin with content for users of different GEO locations  In your default.vcl file you can set a header that&amp;rsquo;s recognizable in Section last-proxy to determine which origin address and host header to make the request with.</description>
    </item>
    
    <item>
      <title>Configure static asset origin</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/static-asset-origin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/static-asset-origin/</guid>
      <description>Static asset origin Below is an example of how to configure your Content Delivery Grid to direct all requests for static assets to a separate origin.
Prerequisites:
 Section account Section application running Varnish A separate origin for your static assets (e.g. S3 bucket)  In your default.vcl file you can set a header that&amp;rsquo;s recognizable in Section last-proxy to determine which origin address and host header to make the request with.</description>
    </item>
    
    <item>
      <title>Configuring a new domain</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/configuring-a-new-domain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/configuring-a-new-domain/</guid>
      <description>Overview This guide will walk you through the steps needed to add a domain to an existing Section environment. For help understanding whether adding an new domain to an existing environment is best for your use case, please visit this guide. If you wish to set up an entirely separate application for this domain or have reached this page without following the going live tutorial please see the getting started guide for a comprehensive guide to every step of the go live process.</description>
    </item>
    
    <item>
      <title>Connect Developer PoP to Aperture</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/connect-to-aperture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/connect-to-aperture/</guid>
      <description>DIf you don&amp;rsquo;t have an Aperture account and want to use the devpop to simply test reverse proxies, feel free to skip this section.*
 In the upper right hand corner of the devpop UI, there is a Connect to Aperture button. When clicking this it will redirect you to Aperture and prompt you to login and authorize the devpop. If you are successful then the Connect to Aperture button will be replaced with a blinking blue icon followed by your email address.</description>
    </item>
    
    <item>
      <title>Create a Free Certificate using Let&#39;s Encrypt</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/create-a-free-tls-certificate-using-letsencrypt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/create-a-free-tls-certificate-using-letsencrypt/</guid>
      <description>Get started Log into your Aperture dashboard and under Set up navigate to the HTTPS page.
  HTTPS in Aperture   Select domain   HTTPS Pulldown   The SSL information for the first domain in this application will automatically load. If you have setup multiple domains on a single application, click the drop down box &amp;ldquo;Select your domain&amp;rdquo; and select the domain you wish to upload a certificate for.</description>
    </item>
    
    <item>
      <title>Create a Let&#39;s Encrypt Certificate Before your DNS Change</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/create-a-letsencrypt-certificate-before-your-dns-change/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/create-a-letsencrypt-certificate-before-your-dns-change/</guid>
      <description>If you would like to create your free TLS certificates before you make your DNS change, you need to configure your server.
For users of Nginx   Obtain the CNAME record for your application. You&amp;rsquo;ll see this on the DNS menu in the Section management console.
  Add this block to your server&amp;rsquo;s configuration, replacing yourdomain.c.section.io with the CNAME you obtained above:
location /.well-known/acme-challenge/ {proxy_set_header Host $host;proxy_pass http://yourdomain.</description>
    </item>
    
    <item>
      <title>Custom Logging</title>
      <link>https://www.section.io/docs/how-tos/debugging/custom-logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/custom-logging/</guid>
      <description>A Guide to logging custom information using Varnish Cache or at the Edge. To help with debugging Section allows several ways to log custom information then allow this information to be recorded and searchable in Kibana.
  1) Log using HTTP response header Any section-io-tag HTTP response header received by Edge will be logged and indexed in Kibana edge-access-log documents as the section_io_tag field. This header can be set by origin or any proxy upstream of Edge.</description>
    </item>
    
    <item>
      <title>Debug Headers</title>
      <link>https://www.section.io/docs/reference/debug-headers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/debug-headers/</guid>
      <description>Overview Section provides a range of debug-headers that are disabled by default. These headers can be enabled by sending the section-debug header set to any value. Section provides the following debug headers :
 section-origin-status section-origin-failure section-origin-dns-failure section-origin-time-seconds  section-origin-status   When no bytes are received from the origin web server (e.g. DNS failures) s​ection-origin-status header is set to &amp;ldquo;000&amp;rdquo;.
  When a response is received from the origin web server section-origin-status is set to upstream status when the upstream-status is a single status code and the last value when the upstream-status is an array of response codes (e.</description>
    </item>
    
    <item>
      <title>Debugging a slow website</title>
      <link>https://www.section.io/docs/how-tos/debugging/debug-slow-website/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/debug-slow-website/</guid>
      <description>Overview When investigating a website slowdown, you first want to determine whether the slowdown is originating within the Section platform or at the origin server. The following guide will help you create a visualization of website performance data.
Step 1 - Creating the visualization  Visit your Section portal and view the HTTP Logs section of your application. This will open up the Kibana view in it&amp;rsquo;s default state. Proceed to click the visualize tab in the upper nav bar which will prompt you to Create a visualization.</description>
    </item>
    
    <item>
      <title>Deleting an Application</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/deleting-an-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/deleting-an-app/</guid>
      <description>- www.example.com/admin/ - the admin-only site  - www.example.com/assets/ - static assets    - www.example.com/assets/images/ - static images only See the Split option under Overview for your application in Section Aperture for some more detail. A split application can later be [deleted](#deleting-applications) and requests for its URL prefix will resume being handled by the original application. All applications handling requests for a given domain must be within the same Section account.</description>
    </item>
    
    <item>
      <title>Deleting an Environment</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/deleting-an-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/deleting-an-environment/</guid>
      <description> At this time, it is not possible to delete an environment.
 </description>
    </item>
    
    <item>
      <title>Deliver a synthetic response</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/deliver-a-synthetic-response/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/deliver-a-synthetic-response/</guid>
      <description>Overview Varnish Cache allows you to create synthetic HTTP responses with the use of vcl_synth. This is useful when you want to perform a redirect, deliver a 404, a custom error page, etc.
Synthetic Responses Below is a basic example of how to deliver a synthetic response using VCL syntax 4.0. This example will deliver a 200 response with the body content &amp;ldquo;Hello World&amp;rdquo; if a request matches the URI path &amp;ldquo;/hello&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Determine TLS Certificate Order</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/determine-tls-certificate-order/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/determine-tls-certificate-order/</guid>
      <description>Getting started Download or unzip the certificates in to a directory somewhere on your computer. The certificates should be PEM encoded and will look like the following in a text editor.
-----BEGIN CERTIFICATE-----/* contents of certificate */-----END CERTIFICATE----- You will require Openssl to be installed. To check if you have Openssl installed, open a command prompt and type:
openssl version You should see output like OpenSSL 1.</description>
    </item>
    
    <item>
      <title>Device based origin selection</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/device-based-origin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/device-based-origin/</guid>
      <description>Device based origin selection Below is an example of how to configure your Content Delivery Grid to direct requests to different origins based on the requesting user&amp;rsquo;s device type.
Prerequisites:
 Section account Section application running Varnish A separate origin with content for different devices  In your default.vcl file you can set a header that&amp;rsquo;s recognizable in Section last-proxy to determine which origin address and host header to make the request with.</description>
    </item>
    
    <item>
      <title>DNS with multiple domains</title>
      <link>https://www.section.io/docs/reference/dns-with-multiple-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/dns-with-multiple-domains/</guid>
      <description>The Section platform will only accept requests with a domain name that is explicitly added to an environment. For example, if you add www.example.com to Section as www.example.com but then choose to create a blog.example.com CNAME record pointing at www.example.com.c.section.io., visitors to http://blog.example.com will receive an error page displaying HTTP 409 Conflict.
This is because blog.example.com has not been explicitly associated with a Section environment.In this case you would need to add blog.</description>
    </item>
    
    <item>
      <title>Edge Proxy</title>
      <link>https://www.section.io/docs/reference/edge-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/edge-proxy/</guid>
      <description>Ingress / Edge Proxy Every Section application proxy stack implicitly begins with the Edge proxy. The Edge proxy is the endpoint to which the User-Agent (eg web browser) connects and it has a few responsibilities:
 Performing the TLS handshake for HTTPS connections Routing requests to the corresponding application proxy stack Implementing the HTTP/2 protocol Request correlation Serving custom error pages  This enables a consistent experience on the Section platform regardless of which proxies are in your application&amp;rsquo;s stack or in which sequence they appear.</description>
    </item>
    
    <item>
      <title>Enable Two Factor Authentication on Your Account</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/user-management/enable-two-factor-authentication-on-your-account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/user-management/enable-two-factor-authentication-on-your-account/</guid>
      <description>In addition to a strong password, your account can be further protected by enabling Two Factor Authentication.
To enable two factor authentication:
 Click on the user icon in the top right corner of the management console and click Profile.  If you want to use SMS verification: Ensure your phone number is correct Turn on two factor authentication and choose Receive an SMS on each login  If you want to use an authenticator app, like Google Authenticator or LastPass Authenticator: Turn on two factor authentication and choose Store my code on a device  Finally, for both options, click Save.</description>
    </item>
    
    <item>
      <title>Exclude URL from Varnish cache</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/exclude-url-from-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/exclude-url-from-cache/</guid>
      <description>Requests to particular URLs can be excluded from Varnish cache.
Exclude a particular URL Use the following code snippet to exclude an exact match to a URL. This code is for VCL4.0.
sub vcl_recv {if (req.url == &amp;quot;/example.html&amp;quot;) {return(pass);}}sub vcl_backend_response {if (bereq.url == &amp;quot;/example.html&amp;quot;) {set beresp.uncacheable = true;set beresp.ttl = 120s;return(deliver);}}Exclude a URL pattern You can also use regex expressions to exclude URLs based on a pattern.</description>
    </item>
    
    <item>
      <title>Extract domain based metrics</title>
      <link>https://www.section.io/docs/how-tos/monitoring/extract-domain-based-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/monitoring/extract-domain-based-metrics/</guid>
      <description>Extract domain based metrics In addition to standard platform metrics you can enable domain based metrics extraction.
Email support@section.io to have this enabled on your account.
Once enabled this will allow you to connect to a metrics endpoint to extract data. (Interesting fact: The endpoint is a prometheus source, you could federate this and point your own prometheus infrastructure at this location)
Data available This endpoint provides the following data: HTTP Requests and Bytes used by Account HTTP Requests and Bytes used by Application HTTP Requests and Bytes used by Environment HTTP Requests and Bytes used by Module (Not normally needed)</description>
    </item>
    
    <item>
      <title>Filter HTTP logs by URI path</title>
      <link>https://www.section.io/docs/how-tos/debugging/filter-http-logs-by-uri-path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/filter-http-logs-by-uri-path/</guid>
      <description>Overview If you with to filter your HTTP Logs by a particular URI path, you&amp;rsquo;ll first need to open up Kibana located under the HTTP Logs section for your application.
Accessing logs  You&amp;rsquo;ll first want to start out by searching for the URI path in the search bar by using the following syntax:  uri_path:&amp;quot;/some/uri/path&amp;quot; Note: do not include any query strings   This is bring up a list of all logs where that URI path strictly equals the value to searched for.</description>
    </item>
    
    <item>
      <title>Generate a 404 response</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/respond-with-a-404/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/respond-with-a-404/</guid>
      <description>Overview Varnish Cache allows you to create synthetic HTTP responses with the use of vcl_synth. This can be used to deliver a 404 not found or 410 permanently removed status code for a particular asset.
VCL syntax Below is an example of how to deliver a synthetic 404 response using VCL syntax 4.0. This example will deliver a 404 response if the request matches the URI path &amp;ldquo;/hello.jpg&amp;rdquo;
sub vcl_recv { if (req.</description>
    </item>
    
    <item>
      <title>Health Checks</title>
      <link>https://www.section.io/docs/reference/health-check/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/health-check/</guid>
      <description>Section platform has a default built-in HTTP health check that monitors the health of the environment across multiple locations in the world.
Section uses a health check that queries the path /.well-known/section-io/aee-hc/healthz?ts=&amp;lt;timestamp&amp;gt; to check for health of the entire stack of modules and it&amp;rsquo;s ability to handle HTTP traffic.
Section uses multiple remote-agents throughout the world to query the environment and then the individiual health responses are aggregated. An individual health response is calculated according to the following conditions :</description>
    </item>
    
    <item>
      <title>How to clear the cache</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/clearing-the-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/clearing-the-cache/</guid>
      <description>There are three ways to remove objects from the Varnish Cache :
 Clear the cache by a particular url. Clearing the entire cache. Fine tuned control of the cache with Varnish Cache ban expressions.  Clear a particular URL You can remove particular URLs from the cache by entering the URL and clicking Purge. This form accepts wildcards in the form of *, so entering /images* will purge all URLs starting with /images.</description>
    </item>
    
    <item>
      <title>How to clear the cache using the API</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/clearing-the-cache-using-the-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/clearing-the-cache-using-the-api/</guid>
      <description>From the management console, click API in the top menu. This will bring you to a UI for all our API routes grouped by category.  Scroll through the list, Click Show/Hide on the Proxy group, then click on the POST method ending with state.  Here, you&amp;rsquo;ll see an interface to help build your API call. Enter your account id, application id, environment name, and proxy name.These can be obtained from the URL in the management console (go to your aperture homepage and look at the URL - the numbers go accountId -&amp;gt; applicationId -&amp;gt; environmentId).</description>
    </item>
    
    <item>
      <title>HTTP Error Messages</title>
      <link>https://www.section.io/docs/reference/http-error-messages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/http-error-messages/</guid>
      <description>Have a look in Chrome&amp;rsquo;s development tools, on the network tab, to discover the HTTP response code for a request.
HTTP 522 This is a modified HTTP 502 status code and means that we had trouble establishing a TCP connection to your server.
Here are some things to check:
 Is your server running? Sometimes your web server (for example, Apache or nginx) may not be running. It may be refusing TCP connections.</description>
    </item>
    
    <item>
      <title>Improve Varnish Cache Hit Rate</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/varnish-cache-hit-rate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/varnish-cache-hit-rate/</guid>
      <description>The Varnish Cache project provides some high level instructions on improving cache hit rate.
The following describes the work flow with Section metrics and development processes to achieve optimal cache hit ratios.
  Review Section Varnish Cache metrics Review http logs Make changes to VCL locally Confirm change has been effective -&amp;gt; Logs Promote changes to Production Confirm change has been effective -&amp;gt; Metrics Rinse and repeat   Review Varnish Cache Metrics Your Section Varnish Cache metrics provide an overview of cache hit ratios for all asset types in addition to cache hit ratios by type.</description>
    </item>
    
    <item>
      <title>Install A New Proxy</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/install-a-new-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/install-a-new-proxy/</guid>
      <description>The section.config.json file The config files dictates the order that traffic will flow through the proxy chain — be aware of the location you put the new reverse proxy in.
For example, if your application is setup with Varnish Cache 4.0.3, you should see this at the top of your config file:
&amp;quot;proxychain&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;modsecurity&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;modsecurity:2.2.7&amp;quot; } ]  1) Add the proxy to your environment&amp;rsquo;s section.config.json file Let&amp;rsquo;s add Varnish Cache 6.</description>
    </item>
    
    <item>
      <title>Magento Metrics</title>
      <link>https://www.section.io/docs/reference/magento-metrics-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/magento-metrics-extension/</guid>
      <description>Section has an extension for Magento customers that allows business managers to access Section site metrics. These metrics provide visibility into the impact caching has on your website, without having to login to the Section application. You can get the extension for your Magento website by going to the Magento Marketplace.
There are three metrics we show in the extension: Overall Cache Hit, HTML Cache Hit, and HTTP Response Codes. The extension in Magento is meant to give you an overview on the current status, but by having a developer look into your Varnish Cache configuration settings or your logs in the in the Section application, you can improve all of these metrics.</description>
    </item>
    
    <item>
      <title>Make a Custom Grafana Dashboard</title>
      <link>https://www.section.io/docs/how-tos/monitoring/make-grafana-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/monitoring/make-grafana-dashboard/</guid>
      <description>Grafana - Custom Dashboards It may be helpful for you to create a custom dashboard that is specific to your application. You can create your own dashboard by either starting from scratch or duplicating an existing dashboard.
Creating a dashboard from scratch To create a dashboard from scratch:
 Click on the Grafana logo in the left hand corner. Open the Dashboards dropdown. Click on New. Select the type of panel you want to display (Graph, singlestat, table, pie chart, etc).</description>
    </item>
    
    <item>
      <title>Make bare domain CNAME records</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/make-bare-domain-cname/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/make-bare-domain-cname/</guid>
      <description>Bare Domains are DNS records without www, also called Zone Apex, Naked Domain and Root Domain. In order to go live on Section, you need to setup a CNAME record pointing to the Section platform. While this is simple to do for any subdomain such as www, creating a CNAME record for a bare domain can cause some problems. This is because a CNAME record trumps all other records and can cause issues with MX records — potentially leading to broken email etc.</description>
    </item>
    
    <item>
      <title>Node.js</title>
      <link>https://www.section.io/docs/explanations/modules/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/explanations/modules/nodejs/</guid>
      <description>What does it do As an asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications. In Node.js, many connections can be handled concurrently. Upon each connection, the callback is fired, but if there is no work to be done, Node.js will sleep.
HTTP is a first-class citizen in Node.js, designed with streaming and low latency in mind. This makes Node.js well-suited for the foundation of a web library or framework.</description>
    </item>
    
    <item>
      <title>Passthrough ACME Challenge HTTP Request</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/passthrough-acme-challenge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/passthrough-acme-challenge/</guid>
      <description>Context If you wish to configure the Section platform to pass the ACME Challenge route through to your origin please follow the following steps. Please note that enabling this feature will render the Section provided Let&amp;rsquo;s Encrypt SSL certificates unusable.
Steps Follow the below steps to deploy this change:
 Locate the section.config.json file in the root of your Section git repository. Locate environment block (in this example we&amp;rsquo;ll be using Production).</description>
    </item>
    
    <item>
      <title>Payment Methods</title>
      <link>https://www.section.io/docs/reference/payment-methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/payment-methods/</guid>
      <description>Section supports a number of payment methods.
Credit Card The default payment method is by credit card which can be added to your account in the billing portal.
Section stores all credit card details in secure vaults provided by our payment gateway providers. We do not store any credit card information on the Section platform.
Add or Update your credit card, visit the Section Billing Portal: first click on the &amp;ldquo;gear&amp;rdquo; icon in your menu then navigate to &amp;ldquo;Account&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Process ESI Directives in JSON responses</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/configure-varnish-cache-to-process-esi-directives-in-json-responses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/configure-varnish-cache-to-process-esi-directives-in-json-responses/</guid>
      <description>If you use Varnish Cache for Content composition using Edge Side Includes you may need to configure Varnish Cache to process ESI directives in files that don&amp;rsquo;t look like XML.
For example, if you are using ESI in an AJAX call that returns some JSON, you might need to enable disable Varnish&amp;rsquo;s XML check.
To do this:
 Create a file in the varnish directory named proxy-features.json. Add the following content:  {&amp;quot;feature/esi_disable_xml_check&amp;quot;: true}```.</description>
    </item>
    
    <item>
      <title>Proxy Contract</title>
      <link>https://www.section.io/docs/reference/proxy-contract/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/reference/proxy-contract/</guid>
      <description>Proxy Requirements The following defines the interaction between the proxy container and the Section proxy hosting platform:
Essential  Proxy should listen on TCP port 80 for HTTP/1.1 on its public interface — never HTTPS or any other port. It may listen on other ports on its loopback interface for internal use only. Proxy must connect upstream to next-hop:80 as HTTP, never HTTPS. The platform will ensure &amp;ldquo;next-hop&amp;rdquo; resolves to the next proxy in the chain or the origin — whichever is next upstream.</description>
    </item>
    
    <item>
      <title>Recommended Test Suite</title>
      <link>https://www.section.io/docs/how-tos/debugging/testing-effectively/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/testing-effectively/</guid>
      <description>The following steps will enable you to prime the CDN caches and follow a process that identifies caching issues for resolution ahead of actual customer traffic:
1 Load your site&amp;rsquo;s Homepage 3-4 times This will ensure that assets are stored in cache and any optimizations that are being applied are activated
2 Browse to another page (eg product page) If your site is an ecommerce site add a product to cart (or perform a similar action that personalizes the users experience)</description>
    </item>
    
    <item>
      <title>Redirect a request</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/redirect-a-request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/redirect-a-request/</guid>
      <description>Overview Varnish Cache allows you to create synthetic HTTP redirect responses with the use of vcl_synth.
Redirect syntax Below is an example of how to deliver a synthetic redirect 301 response using VCL syntax 4.0. This example will deliver a 301 response with a location header to redirect to &amp;ldquo;/world&amp;rdquo; if a request matches the URI path &amp;ldquo;/hello&amp;rdquo;
sub vcl_recv { if (req.url ~ &amp;#34;/hello&amp;#34;) { return (synth(801, &amp;#34;/world&amp;#34;)); } } sub vcl_synth { if (resp.</description>
    </item>
    
    <item>
      <title>Remove a user from your account</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/user-management/remove-a-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/user-management/remove-a-user/</guid>
      <description>Remove a User from an Account To remove a user from your account (requires admin status):
 Click on Account and then Manage Users in the top right of the management console. Click Remove From Account next to the relevant user.  </description>
    </item>
    
    <item>
      <title>Removing a module from your proxy stack</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/remove-a-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/remove-a-proxy/</guid>
      <description>The section.config.json file This file in the root of your git repository found under the Advanced config menu in Aperture, defined which proxies/modules are running for your environment dictated by the git branch.
For example, if your application is setup with Varnish Cache 6.1.1 and Kraken 2.0.0, you should see this at the top of your config file:
&amp;quot;proxychain&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;varnish&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;varnish:6.1.1&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;kraken&amp;quot;, &amp;quot;image&amp;quot;: &amp;quot;kraken:2.</description>
    </item>
    
    <item>
      <title>Run multiple origins in one environment</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/multiple-origins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/multiple-origins/</guid>
      <description>A Guide to hooking up multiple origin servers to one Section environment and orchestrating incoming HTTP traffic distribution among them. When you have a single origin or upstream server, your section.config.json file will look something like this:
&amp;quot;origin&amp;quot;: {&amp;quot;address&amp;quot;: &amp;quot;origin.example.com&amp;quot;,&amp;quot;host_header&amp;quot;: &amp;quot;override.example.com&amp;quot;} However, there are cases where it is useful to have two different upstream services — perhaps you want to make two backend systems appear on the same domain.</description>
    </item>
    
    <item>
      <title>Run WebPagetest On Your Website</title>
      <link>https://www.section.io/docs/how-tos/debugging/testing-via-internet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/testing-via-internet/</guid>
      <description>This is a guide to help you run some basic tests against your website using webpagetest.org, a free real browser synthetic testing agent.
While synthetic tests do not necessarily provide an accurate indication of how fast your site will be in the hands of your users, they can be useful to help you understand which items you can work on to the improve performance of individual pages. By focusing on key pages, you can improve the overall performance of your website.</description>
    </item>
    
    <item>
      <title>Running Minikube with a Local Origin</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/dev-pop-with-local-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/dev-pop-with-local-server/</guid>
      <description>Although Minikube functions functions best when pointed at an origin server with a publicly available IP address, it is possible to connect DevPop to a local development server. The source of complexity here is dealing with the network bridge between the host machine and the Minikube virtual machine. The following is a set of directions for implementing this using virtual box and a local server running on port 80, but the necessary configuration may vary if you have an alternative setup.</description>
    </item>
    
    <item>
      <title>Searching HTTP logs using section-io-id</title>
      <link>https://www.section.io/docs/how-tos/debugging/search-logs-using-section-io-id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/search-logs-using-section-io-id/</guid>
      <description>In this document and video we show you how to search the HTTP Logs in Section&amp;rsquo;s dashboard by using the value of the `section-io-id&#39; HTTP response header which is present on every response served by Section platform.
Obtain the section-io-id header value. If you are using a broswer, you shoulw be able to open up broswer Dev-Tools -&amp;gt; Network, load the page then you should see all the requests the browser made.</description>
    </item>
    
    <item>
      <title>Serve stale content while the backend is offline</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/configure-varnish-cache-to-serve-content-while-the-backend-is-offline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/configure-varnish-cache-to-serve-content-while-the-backend-is-offline/</guid>
      <description>Configuring Varnish Cache to serve stale content is very useful for when your origin crashes. This behavior is achievable when running Varnish Cache as a reverse proxy within the Section Content Delivery Grid.
Prerequisites Make sure you have an account on Section, and have selected Varnish Cache to run in your proxy stack.
Note: This guide will be using VCL 4 syntax, so if you are interested in VCL 3 syntax please reach out to us at support@section.</description>
    </item>
    
    <item>
      <title>Set up HTTPS and HTTP/2</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/setup-https/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/setup-https/</guid>
      <description>When your application is first created it will be served over HTTP and via HTTPS using a default network certificate. Once we detect DNS has been changed on to our platform we will provide a signed and valid certificate through Let&amp;rsquo;s Encrypt.
If you have added multiple domains to the application, a Let&amp;rsquo;s Encrypt certificate will be provided for each domain. If you have provided your own custom certificate, you need to upload a certificate for each domain (even if they are listed as alternate names on the same certificate) using our API.</description>
    </item>
    
    <item>
      <title>Set up Node.js</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/nodejs/</guid>
      <description>Section&amp;rsquo;s Node.js module allows you to deploy your own Node.js code at the Edge. Below are the following steps you will need to take to get your Node.js app up and running within your Section application.
Step 1: Add Node.js module to Section application Pull your Section application repository to your local machine. In the root of your repository, add a directory titled nodejs. Then edit section.config.json file in the root directory and insert the following object into the proxychain object located in the json file.</description>
    </item>
    
    <item>
      <title>Set up Outage Pages</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/outage-pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/outage-pages/</guid>
      <description>A guide to setup custom outage pages Section has an Outage Page feature that will allow multiple HTML pages to be uploaded on to the platform and displayed during maintenance or other planned down times.
1) Design an outage page The Outage Page feature is designed for HTML only. We recommend keeping the HTML simple. Any static assets linked in the HTML should be hosted off domain, such as on AWS S3.</description>
    </item>
    
    <item>
      <title>Set up Real User Monitoring</title>
      <link>https://www.section.io/docs/how-tos/performance/rum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/performance/rum/</guid>
      <description>Section offers free real user monitoring for any customer that signs up and begins their trial. This enables you to see how your own visitors are experiencing your website performance with the use of a simple JavaScript snippet. Data includes:
 Back end, front end, and full page load time Throughput Traffic by user agent (browser, device type)  Setting up RUM in Section To add RUM to your website, simply login to your Section account and go to &amp;ldquo;Real User Monitoring&amp;rdquo; under &amp;ldquo;Set Up&amp;rdquo; in the left navigation.</description>
    </item>
    
    <item>
      <title>Setting and unsetting HTTP headers</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/set-and-unset-headers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/set-and-unset-headers/</guid>
      <description>Overview Varnish Cache gives you the ability to modify, add, and remove HTTP headers on the request and response object.
Request Headers The vcl_recv sub routine is called at the beginning of a request and this is where we will be modifying the request headers. We will be adding the header hello with value of world, and removing the user-agent header.
sub vcl_recv { ... set req.http.hello = &amp;#34;world&amp;#34;; unset req.</description>
    </item>
    
    <item>
      <title>Sub Processors</title>
      <link>https://www.section.io/docs/additional-information/sub-processors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/additional-information/sub-processors/</guid>
      <description>In order to provide Section services, Section engages certain sub-processors. A sub-processor may be a Section affiliate engaged in the processing of personal data or a third-party service provider engaged by Section to process personal data on behalf of the customers or users of Section services.
For more information on Section data processing obligations, please see our Data Processing Addendum.
Sub Processors    Name Type Location     Amazon Web Services Inc.</description>
    </item>
    
    <item>
      <title>Test Website Performance Locally</title>
      <link>https://www.section.io/docs/how-tos/debugging/testing-locally/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/testing-locally/</guid>
      <description>Instead of using WebPageTest, you may wish to test the site through Section locally using your own browser. You can achieve this by changing how DNS to the site is resolved on your local test machine.
Check out our set of recommended tests for help ensuring that you&amp;rsquo;ve covered all your bases.
1 Obtaining a test IP For our managed customers, our engineers will provide you with a test IP and you can skip to part 2.</description>
    </item>
    
    <item>
      <title>Troubleshoot Developer PoP Issues</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/troubleshoot-developerpop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/troubleshoot-developerpop/</guid>
      <description>The Developer PoP is a still in beta and will occasionally have hiccups. This section details some common issues and how to deal with them.
Network connectivity and computer sleep Often if you put your computer to sleep with Minikube running, it will break Minikube&amp;rsquo;s network adaptor, and you will get 503 errors without a clear cause when you resume operation. This will also prevent you from downloading proxy images as a part of a git push.</description>
    </item>
    
    <item>
      <title>Update Git for a different developer pop ip address</title>
      <link>https://www.section.io/docs/how-tos/developer-workflow/update-git-for-a-different-developer-pop-ip-address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/developer-workflow/update-git-for-a-different-developer-pop-ip-address/</guid>
      <description>It is possible your Developer PoP IP address may change.
If you see a failure on git push with your Developer PoP, try these steps:
 Ensure Minikube is running: minikube status. Obtain the current IP address of Minikube: minikube ip. Substitute the IP address into the following command to update the git remote in your Developer PoP git remote set-url developer-pop http://192.168.99.100:30090/application-name.git.  </description>
    </item>
    
    <item>
      <title>Upload a Custom SSL Certificate</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/https-tls/upload-a-custom-certificate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/https-tls/upload-a-custom-certificate/</guid>
      <description>1) Navigate to HTTPS Log into your Aperture dashboard and under Set up navigate to the HTTPS page.
2) Select your desired domain The dropdown will automatically fill with the first domain listed in your application. If that&amp;rsquo;s not the one you want, select the correct one from the dropdown.
If you have multiple sub domains in this application and wish to upload a wild card certificate or a certificate with multiple domains in the Subject Alternate Name(SAN), you will need to upload the certificate for each domain.</description>
    </item>
    
    <item>
      <title>Use Section hosted DNS</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/set-up-dns-on-section/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/set-up-dns-on-section/</guid>
      <description>To simplify management for your websites, Section can provide DNS hosting. This is especially useful for pointing a zone-apex record (ie bare domain) at a Section endpoint if your current DNS hosting provider does not support the ALIAS or ANAME record types.
Hosting your DNS with Section also provides convenient access to DNS management within the Aperture portal.
Begin hosting DNS with Section To enable Hosted DNS with Section:
  Navigate to the DNS page for your Section application&amp;rsquo;s hosted environment (eg Production).</description>
    </item>
    
    <item>
      <title>Use Section with outside DNS</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/set-up-dns-on-other-provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/domains-dns/set-up-dns-on-other-provider/</guid>
      <description>To use Section with outside DNS, simply go to your DNS hosting provider&amp;rsquo;s console and perform the steps necessary to add a new domain to Section. If you have not yet gone through the going live tutorial please visit it for a more in depth view of the entire process
DNS Resources Each registrar has its own method of adding CNAME records. Below are some links to instructions on adding DNS records for common hosts and DNS providers.</description>
    </item>
    
    <item>
      <title>Use Varnish Cache snippets</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/sample-varnish-snippets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/sample-varnish-snippets/</guid>
      <description>Varnish Cache Configuration Advanced configuration is done via the Varnish Cache Control Language file default.vcl. You can access this file by going to Repository under the Configuration menu in the left nav of Aperture and then clicking on the Varnish Cache file.
To help you get started, we&amp;rsquo;ve written some VCL snippets that cover some basic aspects of functionality for you to review.
Cache Static Content  Normalise Accept-Encoding  Enforce HTTPS  Block Access  Cache Everything  Wordpress Caching  For more information on how to write VCL, visit Varnish documentation, where each version has its own user guide.</description>
    </item>
    
    <item>
      <title>Using the Quick Configuration</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/basic-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/basic-configuration/</guid>
      <description>To make it easy to get started configuring your reverse proxies, Section offers a few basic confguration options for Varnish and Modsecurity. Check out our guide on Advanced Configuration for more advanced configuration topics.
Varnish To make getting your CDN setup easier we have a number of configuration options you can enable without having to know how to use Varnish&amp;rsquo;s VCL programming language. To use these go to the Proxy page under the Configuration menu in Aperture.</description>
    </item>
    
    <item>
      <title>Varnish Cache Quick Config</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/configure-varnish-with-gui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/configure-varnish-with-gui/</guid>
      <description>Learning VCL can be a tricky thing so we have made a GUI that let&amp;rsquo;s you cache your static assets and HTML documents without knowing VCL.
In the left hand side of your Aperture dashboard there is a section called Quick Config which contains the toggles and inputs to configure Varnish Cache.
  Varnish Cache Quick Config   Configure static asset caching Static asset caching is enabled by default to cache your statics for 6 hours and retain your origin cache control headers for the browser cache.</description>
    </item>
    
    <item>
      <title>View response metrics by region</title>
      <link>https://www.section.io/docs/how-tos/debugging/view-response-metrics-by-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/debugging/view-response-metrics-by-region/</guid>
      <description>Overview This is a guide to help you test the response times in milliseconds across different regions. You will be utilizing the Kibana/HTTP Logs view to break down the time_taken_ms field on the edge-access-log type by the geoip.country_code2 field.
Step 1 - Creating the visualization  Visit your Section portal and view the HTTP Logs section of your application. This will open up the Kibana view in it&amp;rsquo;s default state. Proceed to click the visualize tab in the upper nav bar which will prompt you to Create a visualization.</description>
    </item>
    
    <item>
      <title>View Varnish Cache Metrics</title>
      <link>https://www.section.io/docs/how-tos/module-integrations/varnish/varnish-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/module-integrations/varnish/varnish-metrics/</guid>
      <description>Out of the box, Section brings up Varnish Cache metrics. The following is a description of these metrics.
Varnish Cache Glossary Key Varnish Cache concepts are described in the Varnish Cache Glossary.
Varnish Cache Counters Further detail with respect to key Varnish Cache Counters (Source; [Mankier])
Counter Levels Info- Informational counters
Counters giving runtime information
Diag- Diagnostic counters
Counters giving diagnostic information
Debug- Debug counters
Counters giving Varnish Cache internals debug information</description>
    </item>
    
    <item>
      <title>Whitelist Section traffic to origin infrastructure</title>
      <link>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/whitelist-section-traffic-on-origin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.section.io/docs/how-tos/application-edge-management/account-configuration/whitelist-section-traffic-on-origin/</guid>
      <description>Overview Section&amp;rsquo;s platform runs on a multitude of hosting providers which means we do not provide a static set of IP addresses. This can be a problem if you wish to whitelist Section traffic to your origin infrastructure.
Alternative method If you wish to whitelist our servers we suggest using a shared secret key header that is send by Section&amp;rsquo;s platform as part of all requests to the origin, and the origin can choose to block requests that do not have that header present.</description>
    </item>
    
  </channel>
</rss>
